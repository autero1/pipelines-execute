name: Pipelines Execute
description: Run Pipelines Execute
inputs:
  working_directory:
    description: "The folder path to run Pipelines Execute in"
    required: true
  with_ssh_enabled:
    description: "Run the build with tmate ssh enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
    required: false
  terragrunt_command:
    description: "The terragrunt command to run"
    required: true
    default: "plan"
  token:
    description: "The GitHub token for downloading the Pipelines binary"
    required: true
  # The following are required for the terragrunt action
  tg_version:
    description: "Terragrunt version to install."
    required: true
    default: "0.48.1"
  tf_version:
    description: "Terraform version to install."
    required: true
    default: "1.0.11"
  tg-execution-parallelism-limit:
    # https://terragrunt.gruntwork.io/docs/features/execute-terraform-commands-on-multiple-modules-at-once/#limiting-the-module-execution-parallelism
    description: "Maximum number of concurrently executed Terraform modules during Terragrunt execution"
    required: false
  pipelines_cli_version:
    description: "The version of the Gruntwork Pipelines CLI to use"
    required: false
    default: v0.2.0-alpha

runs:
  using: "composite"
  steps:
    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Enable debugging via ssh
      uses: mxschmitt/action-tmate@v3
      env:
        GH_TOKEN: ${{ inputs.token }}
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.with_ssh_enabled }}
      with:
        detached: true

    - name: Install Terraform and Terragrunt
      env:
        TF_ENV_VERSION: v3.0.0
        TG_SWITCH_VERSION: 0.6.0
      run: |
        # Install tfenv
        git clone --depth=1 --branch ${TF_ENV_VERSION} https://github.com/tfutils/tfenv.git ~/.tfenv

        # Install tgswitch
        mkdir -p "${HOME}/tgswitch"
        wget -q https://github.com/warrensbox/tgswitch/releases/download/${TG_SWITCH_VERSION}/tgswitch_${TG_SWITCH_VERSION}_linux_amd64.tar.gz -O /tmp/tgswitch_${TG_SWITCH_VERSION}_linux_amd64.tar.gz
        tar -xzf /tmp/tgswitch_${TG_SWITCH_VERSION}_linux_amd64.tar.gz -C ${HOME}/tgswitch
        chmod u+x ${HOME}/tgswitch/tgswitch
        rm -rf /tmp/tgswitch_${TG_SWITCH_VERSION}_linux_amd64.tar.gz

        # Add tfenv and tgswitch to PATH variable
        export PATH=$PATH:$HOME/.tfenv/bin:$HOME/tgswitch

        # Install Terraform and Terragrunt
        tfenv install ${{ inputs.tf_version }}
        tfenv use ${{ inputs.tf_version }}
        tgswitch ${{ inputs.tg_version }}

    - name: Download Pipelines CLI
      uses: dsaltares/fetch-gh-release-asset@1.1.1
      with:
        repo: "gruntwork-io/pipelines-cli"
        version: "tags/${{ inputs.pipelines_cli_version }}"
        file: "pipelines_linux_amd64"
        target: "/tmp/pipelines"
        token: ${{ inputs.token }}

    - name: Install Pipelines CLI
      shell: bash
      run: |
        sudo mv /tmp/pipelines /usr/local/bin/pipelines
        sudo chmod +x /usr/local/bin/pipelines

    - name: Run Pipelines Execute
      id: execute
      shell: bash
      run: |
        pipelines execute \
          --working-directory ${{ inputs.working_directory }} \
          --terragrunt-command ${{ inputs.terragrunt_command }} \
          --tg-execution-parallelism-limit ${{ inputs.tg_enable_parallelism_limit }}
